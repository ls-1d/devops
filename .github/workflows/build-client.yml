---
name: build client - CI

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Step 1 - Checkout the main GitHub branch
      uses: actions/checkout@v4

    - name: Step 2 - Setup SSH
      uses: shimataro/ssh-key-action@v2
      with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

    # - name: Step 3 - rsync over SSH
    #   run: |
    #     touch foo.txt
    #     rsync  ./foo.txt ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USERNAME }}/

    # - name: Step 4 - Executing remote ssh commands using passwordss
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.REMOTE_HOST }}
    #     username: ${{ secrets.REMOTE_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     script: |
    #       cd
    #       ls -a

    - name: Step 3 - Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 14

    - name: Step 4 - Install Package Dependencies from Package.json
      run: |
        cd all_in_docker/client
        npm i
        CI=false npm run build
        ls -a

    - name: Step 5 - Transfer Build Files to Ubuntu Instance
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./all_in_docker/client/build"
        target: "/tmp"

    - name: Step 6 - Persist Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-files
        path: all_in_docker/client/build
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Step 1 - Check for disk space
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt install nginx -y
            sudo cp -r /tmp/all_in_docker/client/build/* /var/www/html/

# ##########################################
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout the main GitHub branch
        uses: actions/checkout@v4
      
      - name: Step 2 - Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Step 3 - Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./all_in_docker/client
          tags: autopilotsedate66/frontend:latest
          push: true
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.TOKEN_GITHUB }}
